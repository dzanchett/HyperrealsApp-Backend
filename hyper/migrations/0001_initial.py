# Generated by Django 2.1.15 on 2020-01-18 14:18

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import hyper.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EmailUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(error_messages={'blank': 'blank', 'invalid': 'invalid', 'invalid_choice': 'invalid_choice', 'null': 'null', 'unique': 'unique', 'unique_for_date': 'unique_for_date'}, max_length=255, unique=True, verbose_name='email address')),
                ('canonical_username', models.CharField(error_messages={'blank': 'blank', 'invalid': 'invalid', 'invalid_choice': 'invalid_choice', 'null': 'null', 'unique': 'unique', 'unique_for_date': 'unique_for_date'}, max_length=40, unique=True, validators=[django.core.validators.RegexValidator(regex='^[a-zA-Z0-9_]+$')])),
                ('latitude', models.FloatField(blank=True, default=None, null=True)),
                ('longitude', models.FloatField(blank=True, default=None, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isbnlike', models.CharField(error_messages={'blank': 'blank', 'invalid': 'invalid', 'invalid_choice': 'invalid_choice', 'null': 'null', 'unique': 'unique', 'unique_for_date': 'unique_for_date'}, max_length=40, unique=True, validators=[hyper.models.isbn_validator])),
            ],
        ),
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('readUser1', models.BooleanField()),
                ('readUser2', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Knowledge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nameKnowledge', models.CharField(error_messages={'blank': 'blank', 'invalid': 'invalid', 'invalid_choice': 'invalid_choice', 'null': 'null', 'unique': 'unique', 'unique_for_date': 'unique_for_date'}, max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('usuario1', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='u1', to=settings.AUTH_USER_MODEL)),
                ('usuario2', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='u2', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('idMessage', models.AutoField(primary_key=True, serialize=False)),
                ('text', models.TextField()),
                ('userSent', models.CharField(error_messages={'blank': 'blank', 'invalid': 'invalid', 'invalid_choice': 'invalid_choice', 'null': 'null', 'unique': 'unique', 'unique_for_date': 'unique_for_date'}, max_length=40, validators=[django.core.validators.RegexValidator(regex='^[a-zA-Z0-9_]+$')])),
            ],
        ),
        migrations.AddField(
            model_name='chat',
            name='messages',
            field=models.ManyToManyField(to='hyper.Message'),
        ),
        migrations.AddField(
            model_name='chat',
            name='usuario1',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='usuario1', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='chat',
            name='usuario2',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='usuario2', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='emailuser',
            name='desiredBooks',
            field=models.ManyToManyField(related_name='desiredBooks', to='hyper.Book'),
        ),
        migrations.AddField(
            model_name='emailuser',
            name='desiredKnowledge',
            field=models.ManyToManyField(related_name='desiredKnowledge', to='hyper.Knowledge'),
        ),
        migrations.AddField(
            model_name='emailuser',
            name='matched_users',
            field=models.ManyToManyField(to=settings.AUTH_USER_MODEL, verbose_name='list of interested users'),
        ),
        migrations.AddField(
            model_name='emailuser',
            name='myBooks',
            field=models.ManyToManyField(related_name='myBooks', to='hyper.Book'),
        ),
        migrations.AddField(
            model_name='emailuser',
            name='myKnowledge',
            field=models.ManyToManyField(related_name='myKnowledge', to='hyper.Knowledge'),
        ),
    ]
